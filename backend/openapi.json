{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/admin/statistics": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Admin Statistics",
        "description": "Gets the statistics of the admin.",
        "operationId": "get_admin_statistics",
        "parameters": [
          {
            "name": "game_mode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Game Mode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/texts": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Texts",
        "description": "Gets all texts.",
        "operationId": "get_texts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Text"
                  },
                  "title": "Response Get Texts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/texts/{text_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Text",
        "description": "Gets a text by the given id.",
        "operationId": "get_text",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextWithQuestions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Text",
        "description": "Deletes a text by the given id.",
        "operationId": "delete_text",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/texts/{text_id}/questions": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Questions",
        "description": "Gets the questions of a text by the given id.",
        "operationId": "get_questions",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionWithCorrectOption"
                  },
                  "title": "Response Get Questions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/texts/{text_id}/questions/{question_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Question",
        "description": "Gets a question of a text by the given id.",
        "operationId": "get_question",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionWithCorrectOption"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Question",
        "description": "Deletes a question of a text by the given id.",
        "operationId": "delete_question",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/texts/{text_id}/questions/{question_id}/statistics": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get Question Statistics",
        "description": "Gets a question statistics of a text by the given id.",
        "operationId": "get_question_statistics",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          },
          {
            "name": "question_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Question Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/generate-text": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Generate Text",
        "operationId": "generate_text",
        "parameters": [
          {
            "name": "difficulty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Difficulty"
            }
          },
          {
            "name": "is_fiction",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean",
              "title": "Is Fiction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedText"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/submit-text": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Add Text",
        "description": "Adds a text to the database.",
        "operationId": "add_text",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/submit-questions": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Submit Questions",
        "description": "Adds questions to the database.",
        "operationId": "submit_questions",
        "parameters": [
          {
            "name": "text_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/QuestionWithCorrectOption"
                },
                "title": "Questions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Submit Questions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Get Token",
        "description": "User passes their refresh token to get a new access token.\nTODO: Invalidate refresh token on use.",
        "operationId": "get_token",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "cookie",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Current User",
        "description": "Gets the current user's information.",
        "operationId": "get_current_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/current/statistics": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Statistics",
        "description": "Gets the statistics based on the user's game history.",
        "operationId": "get_user_statistics",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserStatistics"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/current/available_texts": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Available Texts",
        "description": "Gets the texts not read by the user.\nReturns the texts paginated and sorted/filtered by the given parameters.",
        "operationId": "get_user_available_texts",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Page Size"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_get_user_available_texts"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAvailableTexts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current/results": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Histories",
        "description": "Gets the history of games played by the user.",
        "operationId": "get_histories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/History"
                  },
                  "type": "array",
                  "title": "Response Get Histories"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/current/results/{history_id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get History",
        "description": "Gets the history of games played by the user.",
        "operationId": "get_history",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "history_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "History Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/History"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register User",
        "description": "Registers a new user.",
        "operationId": "register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_register_user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login User",
        "description": "Logs in a user. Returns access token and refresh token.",
        "operationId": "login_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/game/texts/next": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "Get Next Text",
        "description": "Gets the next text that the user has not attempted before.\nNOTE:\nThe current implementation returns a random text,\nregardless of which texts the user has seen.",
        "operationId": "get_next_text",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          }
        }
      }
    },
    "/game/texts/{text_id}/questions/next": {
      "get": {
        "tags": [
          "game"
        ],
        "summary": "Get Next Questions",
        "description": "Gets next 10 questions that the user has not attempted before.\nNOTE:\nThe current implementation returns 10 random questions for the given text,\nregardless of which questions the user has seen.",
        "operationId": "get_next_questions",
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Question"
                  },
                  "title": "Response Get Next Questions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/game/texts/{text_id}/answers": {
      "post": {
        "tags": [
          "game"
        ],
        "summary": "Post Answers",
        "description": "Accepts the question answers and other statistics.\nReturns the results to the answers.",
        "operationId": "post_answers",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "text_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_post_answers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Result"
                  },
                  "title": "Response Post Answers"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/testing/db/seed": {
      "post": {
        "summary": "Seed",
        "operationId": "seed",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminStatistics": {
        "properties": {
          "average_score": {
            "type": "integer",
            "title": "Average Score"
          },
          "average_wpm": {
            "type": "integer",
            "title": "Average Wpm"
          },
          "min_wpm": {
            "type": "integer",
            "title": "Min Wpm"
          },
          "max_wpm": {
            "type": "integer",
            "title": "Max Wpm"
          }
        },
        "type": "object",
        "required": [
          "average_score",
          "average_wpm",
          "min_wpm",
          "max_wpm"
        ],
        "title": "AdminStatistics"
      },
      "Answer": {
        "properties": {
          "question_id": {
            "type": "string",
            "title": "Question Id"
          },
          "selected_option": {
            "type": "integer",
            "title": "Selected Option"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "selected_option"
        ],
        "title": "Answer"
      },
      "Body_get_user_available_texts": {
        "properties": {
          "text_filter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextFilter"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_sort": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextSort"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_get_user_available_texts"
      },
      "Body_login_user": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_user"
      },
      "Body_post_answers": {
        "properties": {
          "answers": {
            "items": {
              "$ref": "#/components/schemas/Answer"
            },
            "type": "array",
            "title": "Answers"
          },
          "average_wpm": {
            "type": "integer",
            "title": "Average Wpm"
          },
          "interval_wpms": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Interval Wpms"
          },
          "game_mode": {
            "type": "string",
            "title": "Game Mode"
          },
          "game_submode": {
            "type": "string",
            "title": "Game Submode"
          },
          "summary": {
            "type": "boolean",
            "title": "Summary"
          }
        },
        "type": "object",
        "required": [
          "answers",
          "average_wpm",
          "interval_wpms",
          "game_mode",
          "game_submode",
          "summary"
        ],
        "title": "Body_post_answers"
      },
      "Body_register_user": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "Body_register_user"
      },
      "GeneratedQuestion": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          },
          "correct_option": {
            "type": "integer",
            "title": "Correct Option"
          }
        },
        "type": "object",
        "required": [
          "content",
          "options",
          "correct_option"
        ],
        "title": "GeneratedQuestion"
      },
      "GeneratedText": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "fiction": {
            "type": "boolean",
            "title": "Fiction"
          },
          "difficulty": {
            "type": "string",
            "title": "Difficulty"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/GeneratedQuestion"
            },
            "type": "array",
            "title": "Questions"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "summary",
          "source",
          "fiction",
          "difficulty",
          "word_count",
          "questions",
          "author"
        ],
        "title": "GeneratedText"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "History": {
        "properties": {
          "text_id": {
            "type": "string",
            "title": "Text Id"
          },
          "game_mode": {
            "type": "string",
            "title": "Game Mode"
          },
          "game_submode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Submode"
          },
          "summary": {
            "type": "boolean",
            "title": "Summary"
          },
          "average_wpm": {
            "type": "integer",
            "title": "Average Wpm"
          },
          "interval_wpms": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Interval Wpms"
          },
          "score": {
            "type": "integer",
            "title": "Score"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/Result"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "text_id",
          "game_mode",
          "game_submode",
          "summary",
          "average_wpm",
          "interval_wpms",
          "score",
          "results"
        ],
        "title": "History"
      },
      "Question": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "options"
        ],
        "title": "Question"
      },
      "QuestionStatistics": {
        "properties": {
          "question_id": {
            "type": "string",
            "title": "Question Id"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          },
          "correct_option": {
            "type": "integer",
            "title": "Correct Option"
          },
          "selected_options": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Selected Options"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "options",
          "correct_option",
          "selected_options"
        ],
        "title": "QuestionStatistics"
      },
      "QuestionWithCorrectOption": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Options"
          },
          "correct_option": {
            "type": "integer",
            "title": "Correct Option"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "options",
          "correct_option"
        ],
        "title": "QuestionWithCorrectOption"
      },
      "Result": {
        "properties": {
          "question_id": {
            "type": "string",
            "title": "Question Id"
          },
          "correct": {
            "type": "boolean",
            "title": "Correct"
          },
          "correct_option": {
            "type": "integer",
            "title": "Correct Option"
          },
          "selected_option": {
            "type": "integer",
            "title": "Selected Option"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "correct",
          "correct_option",
          "selected_option"
        ],
        "title": "Result"
      },
      "Text": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "fiction": {
            "type": "boolean",
            "title": "Fiction"
          },
          "difficulty": {
            "type": "string",
            "title": "Difficulty"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "summary",
          "source",
          "fiction",
          "difficulty",
          "word_count"
        ],
        "title": "Text"
      },
      "TextFilter": {
        "properties": {
          "game_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Game Mode"
          },
          "difficulty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Difficulty"
          }
        },
        "type": "object",
        "title": "TextFilter"
      },
      "TextSort": {
        "properties": {
          "field": {
            "type": "string",
            "title": "Field"
          },
          "ascending": {
            "type": "boolean",
            "title": "Ascending",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "field"
        ],
        "title": "TextSort"
      },
      "TextWithQuestions": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "summary": {
            "type": "string",
            "title": "Summary"
          },
          "source": {
            "type": "string",
            "title": "Source"
          },
          "fiction": {
            "type": "boolean",
            "title": "Fiction"
          },
          "difficulty": {
            "type": "string",
            "title": "Difficulty"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/QuestionWithCorrectOption"
            },
            "type": "array",
            "title": "Questions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "summary",
          "source",
          "fiction",
          "difficulty",
          "word_count",
          "questions"
        ],
        "title": "TextWithQuestions"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "role"
        ],
        "title": "User"
      },
      "UserAvailableTexts": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/Text"
            },
            "type": "array",
            "title": "Texts"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size"
          },
          "total_texts": {
            "type": "integer",
            "title": "Total Texts"
          }
        },
        "type": "object",
        "required": [
          "texts",
          "page",
          "page_size",
          "total_texts"
        ],
        "title": "UserAvailableTexts"
      },
      "UserStatistics": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "min_wpm": {
            "type": "integer",
            "title": "Min Wpm"
          },
          "max_wpm": {
            "type": "integer",
            "title": "Max Wpm"
          },
          "average_wpm": {
            "type": "integer",
            "title": "Average Wpm"
          },
          "average_score": {
            "type": "integer",
            "title": "Average Score"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "email",
          "min_wpm",
          "max_wpm",
          "average_wpm",
          "average_score"
        ],
        "title": "UserStatistics"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/api/v1/auth/token"
          }
        }
      }
    }
  }
}