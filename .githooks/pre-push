#!/bin/bash

# ANSI color codes
RED='\033[1;31m'
BRIGHT_BLUE='\033[1;34m'
GREEN='\033[1;32m'
NO_COLOR='\033[0m'

function print_info() {
    printf "\n$BRIGHT_BLUE%s$NO_COLOR\n" "$1"
}

function print_error() {
    printf "\n$RED%s$NO_COLOR\n" "$1"
}

function print_success() {
    printf "\n$GREEN%s$NO_COLOR\n" "$1"
}


print_info "[1/6] Running frontend type checks..."
if ! ./tests/typecheck_frontend.sh; then
    print_error "Frontend type checks failed. Please fix the issue before pushing."
    exit 1
else
    print_success "Frontend type checks passed!"
fi

print_info "[2/6] Running backend type checks..."
if ! ./tests/typecheck_backend.sh; then
    print_error "Backend type checks failed. Please fix the issue before pushing."
    exit 1
else
    print_succes "Backend type checks passed!"
fi

print_info "[3/6] Running frontend linting checks..."
if ! ./tests/check_lint_frontend.sh; then
    print_error "Frontend linting checks failed. Please fix the issue before pushing."
    exit 1
else
    print_success "Frontend linting checks passed!"
fi

print_info "[4/6] Running backend linting checks..."
if ! ./tests/check_lint_backend.sh; then
    print_error "Backend linting checks failed. Please fix the issue before pushing."
    exit 1
else
    print_success "Backend linting tests passed!"
fi

print_info "[5/6] Running frontend formatting checks..."
if ! ./tests/check_format_frontend.sh; then
    print_error "Frontend checks failed. Please fix the issue before pushing."
    exit 1
else
    print_success "Frontend formatting tests passed!"
fi

print_info "[6/6] Running backend formatting checks..."
if ! ./tests/check_format_backend.sh; then
    print_error "Backend formatting checks failed. Please fix the issue before pushing."
    exit 1
else
    print_success "Backend formatting tests passed!"
fi

print_success "All tests passed! Pushing changes..."
exit 0
