stages:
  - type_check
  - check_lint
  - check_format
  - unit_test
  - e2e_test
  - deploy

default:
  tags: [private]

# For Docker-in-Docker used in E2E testing.
# https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4596
variables:
  DOCKER_TLS_CERTDIR: "/certs/${CI_JOB_ID}"

.frontend: &frontend
  image: node:21
  variables:
    REACT_APP_BACKEND_URL: http://backend:8000
  before_script:
    - cd frontend
    - yarn install

.frontend-test:
  <<: *frontend
  variables:
    REACT_APP_BACKEND_URL: http://backend-test:8000

.backend: &backend
  image: python:3.12
  variables:
    ACCESS_TOKEN_SECRET_KEY: secret
    REFRESH_TOKEN_SECRET_KEY: secret
    POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/default
    MONGO_URL: mongodb://mongo:27017/default

    POSTGRES_DB: default
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    MONGO_INITDB_DATABASE: default
  services:
    - name: postgres:14-alpine
      alias: postgres
    - name: mongo:6.0
      alias: mongo
  before_script:
    - cd backend
    - pip install poetry==1.6.1
    - poetry config virtualenvs.in-project true
    - poetry install

.backend-test:
  <<: *backend
  variables:
    ACCESS_TOKEN_SECRET_KEY: secret
    REFRESH_TOKEN_SECRET_KEY: secret
    POSTGRES_URL: postgresql://postgres:postgres@postgres-test:5432/default
    MONGO_URL: mongodb://mongo-test:27017/default

    POSTGRES_DB: default
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    MONGO_INITDB_DATABASE: default
  services:
    - name: postgres:14-alpine
      alias: postgres-test
    - name: mongo:6.0
      alias: mongo-test

.deploy:
  image: dokku/ci-docker-image
  stage: deploy
  variables:
    # Disable shallow clone which is not supported by Dokku.
    # https://github.com/dokku/dokku/issues/2514#issuecomment-616775470
    GIT_DEPTH: 0

    STAGING_URL: ssh://dokku@cloud-vm-42-173.doc.ic.ac.uk:22
    PROD_URL: ssh://dokku@cloud-vm-42-228.doc.ic.ac.uk:22
  script:
    - dokku-deploy
  after_script:
    - dokku-unlock

print_info:
  stage: deploy
  script:
    - echo "Starting deploy..."

# type_check_frontend:
#   extends: .frontend
#   stage: type_check
#   script:
#     - yarn tsc --noEmit

# type_check_backend:
#   extends: .backend
#   stage: type_check
#   script:
#     - poetry run mypy src

# check_lint_frontend:
#   extends: .frontend
#   stage: check_lint
#   script:
#     - yarn eslint --max-warnings 0 "src/**/*.ts" "src/**/*.tsx"

# check_lint_backend:
#   extends: .backend
#   stage: check_lint
#   script:
#     - poetry run pylint src

# check_format_frontend:
#   extends: .frontend
#   stage: check_format
#   script:
#     - yarn run prettier --check "src/**/*.ts" "src/**/*.tsx"

# check_format_backend:
#   extends: .backend
#   stage: check_format
#   script:
#     - poetry run isort --profile black --check src
#     - poetry run black --check src

# unit_test_frontend:
#   extends: .frontend-test
#   stage: unit_test
#   script:
#     - yarn jest --watchAll=false src

# unit_test_backend:
#   extends: .backend-test
#   stage: unit_test
#   script:
#     - poetry run pytest --verbose tests

# e2e_test:
#   image: docker:24.0.5
#   stage: e2e_test
#   only:
#     - master
#     - tags
#   services:
#     - docker:24.0.5-dind
#   before_script:
#     - docker info
#   script:
#     - ./frontend/cypress.sh

deploy_staging_frontend:
  extends: .deploy
  # Need to make sure backend app is deployed
  # otherwise network alias speed-reader-backend.web cannot be resolved.
  needs: [deploy_staging_backend]
  only:
    - master
  variables:
    BRANCH: master
    GIT_REMOTE_URL: $STAGING_URL/speed-reader-frontend
    GIT_PUSH_FLAGS: -f

deploy_staging_backend:
  extends: .deploy
  only:
    - master
  variables:
    BRANCH: master
    GIT_REMOTE_URL: $STAGING_URL/speed-reader-backend
    GIT_PUSH_FLAGS: -f

deploy_prod_frontend:
  extends: .deploy
  needs: [deploy_prod_backend]
  only:
    - tags
  except: [branches]
  variables:
    BRANCH: master
    GIT_REMOTE_URL: $PROD_URL/speed-reader-frontend
    GIT_PUSH_FLAGS: -f

deploy_prod_backend:
  extends: .deploy
  only:
    - tags
  except: [branches]
  variables:
    BRANCH: master
    GIT_REMOTE_URL: $PROD_URL/speed-reader-backend
    GIT_PUSH_FLAGS: -f
